{
    "code": "// 生成星空背景\nfunction createStars() {\n    const starsContainer = document.getElementById('stars');\n    for (let i = 0; i < 100; i++) {\n        const star = document.createElement('div');\n        star.className = 'star';\n        star.style.width = `${Math.random() * 2 + 1}px`;\n        star.style.height = star.style.width;\n        star.style.left = `${Math.random() * 100}%`;\n        star.style.top = `${Math.random() * 100}%`;\n        star.style.animationDelay = `${Math.random() * 1.5}s`;\n        starsContainer.appendChild(star);\n    }\n}\ncreateStars();\n\n// 管理標題數字\nlet titleNumber = localStorage.getItem('titleNumber') ? parseInt(localStorage.getItem('titleNumber')) : 1;\ndocument.title = `Position Game ${titleNumber}`;\nlocalStorage.setItem('titleNumber', titleNumber + 1);\n\n// 遊戲數據\nconst positions = ['in front of', 'between', 'behind', 'over', 'under'];\nconst fruits = [\n    { image: 'images/red.png', name: 'apple', colorClass: 'apple' },\n    { image: 'images/yellow.png', name: 'banana', colorClass: 'banana' },\n    { image: 'images/blue.png', name: 'blueberry', colorClass: 'blueberry' },\n    { image: 'images/green.png', name: 'watermelon', colorClass: 'watermelon' }\n];\nlet currentQuestion = 0;\nlet score = 0;\nconst maxQuestions = 10;\nconst canvas = document.getElementById('gameCanvas');\nconst ctx = canvas.getContext('2d');\n\n// 檢查 Canvas 初始化\nconsole.log('Canvas initialized:', canvas, ctx);\n\n// 預載入圖片\nconst images = {};\nfruits.forEach(fruit => {\n    images[fruit.name] = new Image();\n    images[fruit.name].src = fruit.image;\n    images[fruit.name].onload = () => console.log(`${fruit.name} image loaded`);\n    images[fruit.name].onerror = () => console.error(`Failed to load ${fruit.name} image`);\n});\n\n// 粒子動畫數據\nlet particles = [];\nconst particleColors = ['#FF0000', '#FFFF00', '#87CEEB', '#00FF00'];\n\n// 創建粒子\nfunction createParticle() {\n    return {\n        x: Math.random() * canvas.width,\n        y: canvas.height,\n        radius: Math.random() * 5 + 2,\n        color: particleColors[Math.floor(Math.random() * particleColors.length)],\n        vx: Math.random() * 4 - 2,\n        vy: -(Math.random() * 5 + 5),\n        alpha: 1\n    };\n}\n\n// 更新和繪製粒子\nfunction updateParticles() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = '#fff';\n    ctx.font = '24px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(`Final Score: ${score} / ${maxQuestions}`, canvas.width / 2, canvas.height / 2);\n\n    particles.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n        particle.alpha -= 0.005;\n        if (particle.alpha < 0) particle.alpha = 0;\n\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(${parseInt(particle.color.slice(1, 3), 16)}, ${parseInt(particle.color.slice(3, 5), 16)}, ${parseInt(particle.color.slice(5, 7), 16)}, ${particle.alpha})`;\n        ctx.fill();\n    });\n\n    particles = particles.filter(p => p.alpha > 0);\n    if (particles.length > 0) {\n        requestAnimationFrame(updateParticles);\n    }\n}\n\n// 啟動慶祝動畫\nfunction startCelebration() {\n    particles = [];\n    for (let i = 0; i < 100; i++) {\n        particles.push(createParticle());\n    }\n    updateParticles();\n    setTimeout(() => {\n        particles = [];\n    }, 5000); // 動畫持續 5 秒\n}\n\n// 檢查 Canvas 數量（調試）\nconsole.log('Canvas count:', document.querySelectorAll('canvas').length);\n\n// 隨機選擇 3 個不同水果\nfunction getRandomFruits() {\n    const shuffled = [...fruits].sort(() => Math.random() - 0.5);\n    return shuffled.slice(0, 3);\n}\n\n// 鎖定/解鎖選項按鈕\nfunction toggleButtons(disabled) {\n    const buttons = document.querySelectorAll('.options button:not(.next-button)');\n    buttons.forEach(button => {\n        button.disabled = disabled;\n    });\n}\n\n// 格式化題目文字，將水果名稱替換為帶樣式的 span\nfunction formatQuestionText(text, fruit1, fruit2, fruit3) {\n    return text.replace(\n        new RegExp(`\\b(${fruit1.name}|${fruit2.name}|${fruit3.name})\\b`, 'g'),\n        match => `<span class=\"color-${match}\">${match}</span>`\n    );\n}\n\n// 生成隨機問題\nfunction generateQuestion() {\n    if (currentQuestion >= maxQuestions) {\n        endGame();\n        return;\n    }\n\n    console.log('Generating question:', currentQuestion + 1);\n    const position = positions[Math.floor(Math.random() * positions.length)];\n    const selectedFruits = getRandomFruits();\n    const fruit1 = selectedFruits[0]; // 主水果\n    const fruit2 = selectedFruits[1]; // 第二水果\n    const fruit3 = selectedFruits[2]; // 第三水果\n    const isRightArrow = Math.random() > 0.5;\n\n    const questionText = position === 'between'\n        ? `Where is the ${fruit1.name} relative to the ${fruit2.name} and ${fruit3.name}?`\n        : `Where is the ${fruit1.name} relative to the ${fruit2.name}?`;\n    document.getElementById('question').innerHTML = formatQuestionText(questionText, fruit1, fruit2, fruit3);\n    console.log('Question text:', questionText);\n\n    // 繪製圖像\n    drawScene(position, fruit1, fruit2, fruit3, isRightArrow);\n\n    // 生成選項\n    const options = [...positions];\n    const optionsDiv = document.getElementById('options');\n    optionsDiv.innerHTML = '';\n    options.forEach(opt => {\n        const button = document.createElement('button');\n        button.innerText = opt;\n        button.onclick = () => checkAnswer(opt, position);\n        optionsDiv.appendChild(button);\n    });\n    console.log('Options generated:', options);\n\n    document.getElementById('feedback').innerText = '';\n    toggleButtons(false); // 解鎖按鈕\n    currentQuestion++;\n}\n\n// 繪製場景\nfunction drawScene(position, fruit1, fruit2, fruit3, isRightArrow) {\n    console.log('Drawing scene:', position, isRightArrow);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const imageSize = 50;\n    const spacing = 30;\n\n    // 繪製箭頭\n    if (position === 'in front of' || position === 'behind') {\n        ctx.fillStyle = '#000';\n        ctx.font = '30px Arial';\n        ctx.fillText(isRightArrow ? '→' : '←', centerX - 20, 40);\n    }\n\n    if (position === 'in front of') {\n        if (!isRightArrow) {\n            ctx.drawImage(images[fruit3.name], centerX - 2 * (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit1.name], centerX - (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit2.name], centerX, centerY - imageSize / 2, imageSize, imageSize);\n        } else {\n            ctx.drawImage(images[fruit3.name], centerX - 2 * (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit2.name], centerX - (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit1.name], centerX, centerY - imageSize / 2, imageSize, imageSize);\n        }\n    } else if (position === 'behind') {\n        if (!isRightArrow) {\n            ctx.drawImage(images[fruit3.name], centerX - 2 * (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit2.name], centerX - (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit1.name], centerX, centerY - imageSize / 2, imageSize, imageSize);\n        } else {\n            ctx.drawImage(images[fruit3.name], centerX - 2 * (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit1.name], centerX - (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n            ctx.drawImage(images[fruit2.name], centerX, centerY - imageSize / 2, imageSize, imageSize);\n        }\n    } else if (position === 'over') {\n        ctx.drawImage(images[fruit3.name], centerX - imageSize / 2, centerY + (imageSize + spacing), imageSize, imageSize);\n        ctx.drawImage(images[fruit2.name], centerX - imageSize / 2, centerY, imageSize, imageSize);\n        ctx.drawImage(images[fruit1.name], centerX - imageSize / 2, centerY - (imageSize + spacing), imageSize, imageSize);\n    } else if (position === 'under') {\n        ctx.drawImage(images[fruit3.name], centerX - imageSize / 2, centerY - (imageSize + spacing), imageSize, imageSize);\n        ctx.drawImage(images[fruit2.name], centerX - imageSize / 2, centerY, imageSize, imageSize);\n        ctx.drawImage(images[fruit1.name], centerX - imageSize / 2, centerY + (imageSize + spacing), imageSize, imageSize);\n    } else if (position === 'between') {\n        ctx.drawImage(images[fruit2.name], centerX - (imageSize + spacing), centerY - imageSize / 2, imageSize, imageSize);\n        ctx.drawImage(images[fruit3.name], centerX + spacing, centerY - imageSize / 2, imageSize, imageSize);\n        ctx.drawImage(images[fruit1.name], centerX - imageSize / 2, centerY - imageSize / 2, imageSize, imageSize);\n    }\n}\n\n// 檢查答案\nfunction checkAnswer(selected, correct) {\n    const feedback = document.getElementById('feedback');\n    const optionsDiv = document.getElementById('options');\n\n    console.log('Checking answer:', selected, 'Correct:', correct);\n    toggleButtons(true);\n\n    if (selected === correct) {\n        feedback.innerText = 'Correct!';\n        score++;\n        document.getElementById('score').innerText = `Score: ${score} / ${maxQuestions}`;\n        setTimeout(generateQuestion, 1000);\n    } else {\n        feedback.innerText = `Wrong! The correct answer is \"${correct}\".`;\n        const nextButton = document.createElement('button');\n        nextButton.innerText = 'Next Question';\n        nextButton.className = 'next-button';\n        nextButton.onclick = () => {\n            optionsDiv.removeChild(nextButton);\n            generateQuestion();\n        };\n        optionsDiv.appendChild(nextButton);\n    }\n}\n\n// 結束遊戲\nfunction endGame() {\n    document.getElementById('question').innerText = 'Game Over!';\n    document.getElementById('options').innerHTML = '';\n    document.getElementById('feedback').innerText = `Final Score: ${score} / ${maxQuestions}`;\n    startCelebration();\n    console.log('Game ended, starting celebration');\n}\n\n// 初始化遊戲\ntry {\n    console.log('Initializing game');\n    generateQuestion();\n} catch (error) {\n    console.error('Initialization failed:', error);\n    document.getElementById('feedback').innerText = 'Error starting game. Please check console for details.';\n}"
}
